server:
  error:
    whitelabel:
      enabled: false
    path: /error

spring:
  application:
    name: rococo-auth
  mvc:
    log-request-details: true
  datasource:
    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 10000
      max-lifetime: 1000
      auto-commit: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    schemas: flyway
    locations: classpath:db/migration/rococo-auth
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    generate-ddl: true
    open-in-view: false

logging:
  level:
    root: INFO
    org.springframework.kafka: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.web.cors: INFO
    org.apache.catalina.filters.RequestDumperFilter: INFO
    org.springframework.boot.autoconfigure: INFO

---
spring:
  config:
    activate:
      on-profile: 'local'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  kafka:
    bootstrap-servers: 'localhost:${ROCOCO_KAFKA_PORT:9092}'
  datasource:
    url: 'jdbc:postgresql://localhost:${ROCOCO_DB_PORT:5432}/rococo-auth'
    username: ${ROCOCO_DB_USER:postgres}
    password: ${ROCOCO_DB_PASSWORD:secret}

server:
  port: ${ROCOCO_AUTH_PORT:9000}

rococo-front:
  base-uri: 'http://127.0.0.1:${ROCOCO_FRONT_PORT:3000}'
rococo-auth:
  base-uri: 'http://127.0.0.1:${ROCOCO_AUTH_PORT:9000}'
oauth2:
  client-id: 'client'

app:
  user:
    username: test_user
    password: 12345

---
spring:
  config:
    activate:
      on-profile: 'docker'
  autoconfigure:
    exclude:
      - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
      - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  kafka:
    bootstrap-servers: 'kafka:9092'
  datasource:
    url: 'jdbc:postgresql://rococo-db:5432/rococo-auth'
    username: postgres
    password: secret

server:
  port: 9000

rococo-front:
  base-uri: 'http://frontend.rococo.dc'
rococo-auth:
  base-uri: 'http://auth.rococo.dc:9000'
oauth2:
  client-id: 'client'

app:
  user:
    username: test_user
    password: 12345
---